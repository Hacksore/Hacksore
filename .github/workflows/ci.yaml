name: CI
on:
  workflow_dispatch:
  push:
    branches:
      - "**"
env:
  NODE_VERSION: "18"

jobs:
  build-web:
    env:
      NODE_VERSION: "18"
      FIREBASE_SA_BASE64: ${{ secrets.FIREBASE_SA_BASE64 }}
      NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
      NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
      NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
      NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
      TURBO_REMOTE_ONLY: true
    name: Build Web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install
        run: pnpm install
      - name: Lint 
        run: pnpm lint
      - name: Build
        run: pnpm build --filter=web --filter=api --filter=types
  build-bot:
    name: Build Bot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Docker
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: false
          context: .
          build-args: "--progress=plain"
          network: host
          allow: network.host
          file: apps/bot/Dockerfile
          tags: ${{ github.repository_owner }}/presence-bot:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
