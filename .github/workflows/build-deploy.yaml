name: Build/Deploy
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    if: github.ref == 'refs/heads/master'
    types:
      - completed
env:
  NODE_VERSION: "18"
  TURBO_REMOTE_ONLY: true
  FIREBASE_SA_BASE64: ${{ secrets.FIREBASE_SA_BASE64 }}
  NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}
  NEXT_PUBLIC_FIREBASE_DATABASE_URL: ${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}
  NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}
  NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

# This is what will cancel the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-bot:
    name: Build Bot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          install: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Build and push image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64
          push: true
          context: .
          build-args: "--progress=plain"
          network: host
          allow: network.host
          file: apps/bot/Dockerfile
          tags: |
            hacksore/presence-bot:latest
  deploy-firebase:
    name: Deploy Firebase Rules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Create google service account file and env var
        run: |
          # decode the token into json and write to file, using base64 to not have to mess with the json format
          echo "Creating file in $HOME/firebase.json"
          echo "${{ secrets.FIREBASE_SA_BASE64 }}" | base64 --decode > "$HOME/firebase.json"

          # source the env with the path to the file
          echo "Sourcing env GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/firebase.json" >> $GITHUB_ENV
      - name: Install firebase-tools
        run: pnpm add -g firebase-tools
      - name: Deploy rules
        run: firebase deploy --non-interactive
  deploy-bot:
    name: Deploy Bot
    runs-on: ubuntu-latest
    needs: [build-bot]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
      - name: SSH and Deploy Container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.BOT_HOST_IP }}
          username: ${{ secrets.BOT_HOST_USERNAME }}
          key: ${{ secrets.BOT_HOST_PRIVATE_KEY}}
          protocol: tcp6
          port: 22
          script: |
            # pull the latest image
            docker pull hacksore/presence-bot:latest
   
            # stop the running instance gracefully
            docker stop presence

            # clean up
            docker rm presence

            # run a new one
            docker run \
              --restart always \
              --detach \
              --name presence \
              --env-file=.env \
              hacksore/presence-bot:latest

            # print for validation
            docker ps
